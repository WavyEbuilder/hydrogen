;; SPDX-FileCopyrightText: Â© 2025 Rahul Sandhu <nvraxn@gmail.com>
;; SPDX-License-Identifier: GPL-3.0-or-later

(block useradd

  (blockinherit .sys.agent.template)

  (allow subj self
     (capability (audit_write chown dac_override dac_read_search fowner
                  fsetid sys_ptrace)))
  (allow subj self (cap_userns (sys_ptrace)))
  (allow subj self (process (setfscreate)))
  (allow subj self create_netlink_audit_socket)
  (allow subj self create_unix_dgram_socket)
  (allow subj self (netlink_audit_socket (nlmsg_relay)))

  (call conf.read_file_files (subj))

  (call .caplastcap.read_sysctlfile_pattern.type (subj))

  (call .checkcontext_selinux_security (subj))

  (call .conf.deletename_file_dirs (subj))
  ;; /etc/skel
  (call .conf.read_file_files (subj))

  (call .crypto.read_sysctlfile_pattern.type (subj))

  (call .devpts.search_fs_pattern.type (subj))

  ;; some have login shell set to /bin/false
  (call .exec.auditexecuteaccess_file_files (subj))

  (call .faillog.log.readwrite_file_files (subj))

  (call .file.auth.write.type (subj))

  (call .file.user.home.manage_all_dirs (subj))
  (call .file.user.home.manage_all_files (subj))
  (call .file.user.home.delete_all_fifo_files (subj))
  (call .file.user.home.delete_all_lnk_files (subj))
  (call .file.user.home.delete_all_sock_files (subj))

  (call .home.readwrite_file_dirs (subj))

  (call .ibac.objchange.type (subj))

  (call .locale.data.map_file_pattern.type (subj))
  (call .locale.read_file_pattern.type (subj))

  (call .log.search_file_pattern.type (subj))

  (call .logindefs.read_file_files (subj))

  ;; failover mail spool file handling
  (call .mail.spool.manage_file_files (subj))
  (call .mail.spool.readwrite_file_dirs (subj))

  (call .ngroupsmax.read_sysctlfile_files (subj))

  (call .nss.passwdgroup.type (subj))

  (call .passwd.manage_file_files (subj))

  (call .proc.getattr_fs_pattern.type (subj))
  (call .proc.list_fs_dirs (subj))

  (call .pwdlock.conf_file_type_transition_file (subj "*"))
  (call .pwdlock.manage_file_files (subj))

  (call .random.read_sysctlfile_pattern.type (subj))

  (call .rbac.objchange.type (subj))

  (call .selinux.file.read_file_pattern.type (subj))
  (call .selinux.readwrite_fs_pattern.type (subj))

  (call .shadow.manage_file_files (subj))
  (call .shadow.read.type (subj))

  ;; checks login shells
  (call .shell.exec.auditexecuteaccess_file_files (subj))

  (call .spool.traverse_file_pattern.type (subj))

  (call .subj.common.read_all_states (subj))

  (call .sys.read_subj_states (subj))

  (call .user.mail.spool.manage_file_files (subj))

  (call .utmp.log.readwrite_file_files (subj))

  (call .xattr.getattr_fs (subj))

  (block conf

    (filecon "/etc/default/useradd" file file_context)
    (filecon "/etc/default/useradd\..*" file file_context)

    (macro conf_file_type_transition_file ((type ARG1))
           (call .conf.file_type_transition
                 (ARG1 file file "useradd")))

    (blockinherit .file.conf.base_template)
    (blockinherit .file.macro_template_files)))

(in file.unconfined

    (call .useradd.conf.conf_file_type_transition_file (typeattr)))

(in after useradd.exec

    (filecon "/usr/bin/newusers" file file_context)
    (filecon "/usr/bin/useradd" file file_context)
    (filecon "/usr/bin/userdel" file file_context)
    (filecon "/usr/bin/userdel_local" file file_context)
    (filecon "/usr/bin/usermod" file file_context))
